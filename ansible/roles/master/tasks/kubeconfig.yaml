---
- name: 'Master | Cerificates | Kube-proxy Kubernetes Configuration File'
  template:
    src: kubeconfig.yaml
    dest: '{{ kubeconfig_location.proxy }}'
  become: yes
  vars:
    api_server: '{{ master_load_balancer }}'
    ca_authority: '{{ ca_pair.cert | b64encode }}'
    cluster_name: 'rubik'
    user: 'system:kube-proxy'
    client_cert: '{{ kube_proxy_keypair.cert | b64encode }}'
    client_key: '{{ kube_proxy_keypair.key | b64encode }}'

- name: 'Master | Cerificates | Controller-manager Kubernetes Configuration File'
  template:
    src: kubeconfig.yaml
    dest: '{{ kubeconfig_location.controller }}'
  become: yes
  vars:
    api_server: '{{ master_load_balancer }}'
    ca_authority: '{{ ca_pair.cert | b64encode }}'
    cluster_name: 'rubik'
    user: 'system:kube-controller-manager'
    client_cert: '{{ controller_manager_pair.cert | b64encode }}'
    client_key: '{{ controller_manager_pair.key | b64encode }}'

- name: 'Master | Cerificates | Kube-schedule Kubernetes Configuration File'
  template:
    src: kubeconfig.yaml
    dest: '{{ kubeconfig_location.scheduler }}'
  become: yes
  vars:
    api_server: '{{ master_load_balancer }}'
    ca_authority: '{{ ca_pair.cert | b64encode }}'
    cluster_name: 'rubik'
    user: 'system:kube-scheduler'
    client_cert: '{{ kube_scheduler_keypair.cert | b64encode }}'
    client_key: '{{ kube_scheduler_keypair.key | b64encode }}'

- name: 'Master | Cerificates | Admin Kubernetes Configuration File'
  template:
    src: kubeconfig.yaml
    dest: '{{ kubeconfig_location.admin }}'
  become: yes
  vars:
    api_server: '{{ master_load_balancer }}'
    ca_authority: '{{ ca_pair.cert | b64encode }}'
    cluster_name: 'rubik'
    user: 'admin'
    client_cert: '{{ admin_pair.cert | b64encode }}'
    client_key: '{{ admin_pair.key | b64encode }}'
